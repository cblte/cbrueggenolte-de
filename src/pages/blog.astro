---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import { createSlug } from '@utils/utils';
import { formatDate } from '@utils/utils';

let posts = await getCollection('posts');
// if we are production mode, filter out drafts
if (import.meta.env.PROD) {
  posts = posts.filter((draft) => !draft.data.draft);
}

// Sort posts by publication date
let sortedPosts = posts.sort(
  (a, b) =>
    new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf()
);
---

<Layout title="Blog">
  <section
    id="blogPosts"
    class="bg-stone-100 shadow-lg p-8 border border-stone-200 rounded-lg"
  >
    <header class="mb-6">
      <h1 class="mb-1 font-medium text-4xl">Blog-Beiträge ({posts.length})</h1>
    </header>

    <ul class="mt-4 pl-6 list-none">
      {
        sortedPosts.map((post) => (
          <li class="relative mb-4">
            <span class="-left-6 absolute font-medium text-sky-500 transition-all duration-200 blog-arrow">
              »
            </span>
            <div class="flex justify-between items-start">
              <div class="flex-1">
                <h2 class="text-left">
                  <a
                    href={`/blog/${createSlug(post.data.title)}/`}
                    class="text-sky-600 hover:text-sky-700 underline hover:underline"
                  >
                    {post.data.title}
                  </a>
                  {post.data?.draft ? (
                    <span class="bg-yellow-200 ml-2 px-2 py-1 border border-yellow-300 rounded text-yellow-800 text-xs">
                      DRAFT
                    </span>
                  ) : (
                    ''
                  )}
                </h2>
                {post.data.tags && (
                  <div class="flex gap-1 mt-1">
                    {post.data.tags.map((tag) => (
                      <span class="px-0.5 text-stone-500 text-sm">
                        {tag.trim()}
                      </span>
                    ))}
                  </div>
                )}
              </div>
              <span class="flex-shrink-0 ml-4 text-stone-600 text-sm">
                <time datetime={post.data.pubDate.toISOString()}>
                  {formatDate(post.data.pubDate.toString())}
                </time>
              </span>
            </div>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>
