---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import { formatDate } from '@utils/utils';

export async function getStaticPaths() {
  const posts = await getCollection('posts');

  // Extract unique tags from posts
  const tags = [...new Set(posts.flatMap((post) => post.data.tags || []))];

  return tags.map((tag) => ({
    params: { tag },
  }));
}

export function createSlug(title: string) {
  // Create a slug from the title
  const slug = title
    .toLowerCase()
    .replace(/[^a-z0-9\s-]/g, '') // Remove special characters
    .trim()
    .replace(/\s+/g, '-') // Replace spaces with hyphens
    .replace(/-+/g, '-'); // Replace multiple hyphens with a single hyphen

  return slug;
}

const { tag } = Astro.params;
const posts = await getCollection('posts');
const filteredPosts = posts.filter((post) => post.data.tags?.includes(tag));
---

<Layout title={`Posts mit dem Tag "${tag}"`}>
  <section id={`tag_${tag}`} class="prose">
    <h1>Posts mit dem Tag #{tag}</h1>
    {
      filteredPosts.length > 0 ? (
        <ul class="m-0 p-0 list-none">
          {filteredPosts.map((post) => (
            <li class="before:absolute m-0 p-0 before:content-['Â»_'] md-2">
              <div class="flex justify-between ml-4">
                <a href={`/blog/${createSlug(post.data.title)}`}>{post.data.title}</a>
                <span class="font-mono">{formatDate(post.data.pubDate.toString())}</span>
              </div>
            </li>
          ))}
        </ul>
      ) : (
        <p>Keine Posts mit diesem Tag gefunden.</p>
      )
    }
  </section>
</Layout>
