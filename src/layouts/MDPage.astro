---
import Layout from "./Layout.astro";
import { formatDate, getCoverImage } from "@utils/utils";

const { frontmatter, headings } = Astro.props;
---

<Layout title={frontmatter.title}>
  <section
    id="pageContent"
    class="prose-h2:mt-4 prose-h3:mt-4 max-w-4xl text-lg/8 prose">
    <header class="mb-6">
      <h1 class="mb-1">{frontmatter.title}</h1>
      <div class="text-sm">
        {frontmatter.date && formatDate(frontmatter.date)}
      </div>

      {
      frontmatter.cover &&
        <div class="coverImage" set:html={getCoverImage(frontmatter)}/>
      }
    </header>

    {
      frontmatter.toc == true && headings.length > 0 && (
        <div
          id="toc"
          class="-top-1 z-40 sticky bg-white mb-6 p-4 rounded-md text-sm">
          <div class="mb-2 font-semibold">Inhaltsverzeichnis</div>
          <ul class="flex flex-wrap items-center gap-x-2 pb-4 not-prose">
            {headings.map((heading: { slug: string; text: string }) => (
              <li class="toc-item">
                <a href={`#${heading.slug}`} class="hover:underline">{heading.text}</a>
              </li>
              <li>&vert;</li>
            ))}
            <li class="toc-item">
              <a href="#top" class="hover:underline">Top &uarr;</a>
            </li>
          </ul>
        </div>
      )
    }
    <slot />
  </section>
</Layout>

<script>
  // Function to update scroll margin based on TOC height
  function updateScrollMargin() {
    const tocHeight = tocElement ? tocElement.offsetHeight : 0;
    const headings = document.querySelectorAll("h2, h3");
    headings.forEach((heading) => {
      (heading as HTMLElement).style.scrollMarginTop = `${tocHeight + 24}px`; // adding 16px padding
    });
  }

  // Add observer for TOC stickiness
  const tocElement = document.getElementById("toc");

  // Initial setup
  if (tocElement) {
    const stickyObserver = new IntersectionObserver(
      ([e]) => e.target.classList.toggle("is-sticky", e.intersectionRatio < 1),
      { threshold: [1] }
    );

    stickyObserver.observe(tocElement);
    updateScrollMargin();
    // Update on window resize
    window.addEventListener("resize", updateScrollMargin);
  }
</script>

<style is:global>
  .is-sticky ul {

  }

  h2,
  h3 {
    scroll-margin-top: calc(toc);
  }

  .coverImage {
    display: flex;
    justify-content: center;

  }

  .coverImage img {
    border-radius: 8px;
    border: 1px solid var(--color-zinc-200);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 800px;
    width: 100%; /* Ensures the image scales down */
    height: auto; /* Maintains aspect ratio */
  }

  /* Add media query for smaller screens */
  @media (max-width: 768px) {
    .coverImage img {
      max-width: 100%; /* Adjusts to fit smaller screens */
      border-radius: 4px; /* Slightly smaller border radius for smaller screens */
    }
  }
</style>
